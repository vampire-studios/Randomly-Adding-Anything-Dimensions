buildscript {
	dependencies {
		classpath 'de.guntram.mcmod:crowdin-translate:1.3+1.17'
	}
	repositories {
		maven {
			name = 'CrowdinTranslate source'
			url = "https://minecraft.guntram.de/maven/"
		}
	}
}

plugins {
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'io.github.juuxel.loom-quiltflower' version '1.7.+'
	id "org.quiltmc.quilt-mappings-on-loom" version "4.2.+"
	alias(libs.plugins.quilt.loom)
}

apply plugin: 'de.guntram.mcmod.crowdin-translate'

crowdintranslate.crowdinProjectName = 'randomly-adding-dimensions-mater'
crowdintranslate.minecraftProjectName = 'raa_dimensions'
crowdintranslate.verbose = true

archivesBaseName = project.archives_base_name
version = "$mod_version+build.$build_number-${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	maven { url = "https://maven.siphalor.de" }
	maven {
		name = "Cotton"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	mavenLocal()
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://maven.shedaniel.me" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://minecraft.guntram.de/maven/" }
	maven { url = "https://jitpack.io" }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
}

loom {
	accessWidenerPath = file("src/main/resources/raa_dimensions.accesswidener")
}

dependencies {
	minecraft libs.minecraft
	mappings loom.layered {
		it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2"))
		it.parchment("org.parchmentmc.data:parchment-1.18.2:2022.07.17@zip")
		it.officialMojangMappings {
			setNameSyntheticMembers(false)
		}
	}
	modImplementation libs.quilt.loader
	modImplementation libs.bundles.qsl

	modImplementation (libs.raa.core) {
		exclude group: "org.quiltmc"
	}
	modImplementation libs.crowdin.translate
}

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

sourceSets {
	main {
		java {
			srcDirs = ["src/main/java"]
			exclude "io/github/vampirestudios/raa_dimension/generation/chunkgenerator/**"
			exclude "io/github/vampirestudios/raa_dimension/generation/carvers/old/**"
		}
	}
}

processResources {
	inputs.property "version", version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

java {
	withSourcesJar()
	toolchain.languageVersion = JavaLanguageVersion.of(17)
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	it.options.encoding = 'UTF-8'
}

compileJava {
	options.compilerArgs += '--enable-preview'
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

build {
	dependsOn downloadTranslations
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		if (project.hasProperty("siphalorMavenUser")) {
			maven {
				name = "Siphalor"
				url = "https://maven.siphalor.de/upload.php"
				credentials {
					username = siphalorMavenUser
					password = siphalorMavenPassword
				}
			}
		}
	}
}